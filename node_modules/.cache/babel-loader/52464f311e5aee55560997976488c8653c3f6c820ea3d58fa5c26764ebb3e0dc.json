{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"/api/company\";\nconst companyAPI = {\n  searchCompanies: async (name, tax_id, government_registration_number) => {\n    try {\n      const response = await axios.post(`${API_URL}/searchCompanies`, {\n        name,\n        tax_id,\n        government_registration_number\n      });\n      return response.data;\n    } catch (error) {\n      console.log(\"Ошибка при поиске компаний:\", error);\n      throw error;\n    }\n  },\n  getObjCards: async (companyId, identifiers) => {\n    try {\n      const response = await axios.post(`${API_URL}/getObjCards`, {\n        companies_id: companyId,\n        identifiers\n      });\n      return response.data;\n    } catch (error) {\n      console.log(\"Ошибка при получении карточек объектов:\", error);\n      throw error;\n    }\n  }\n};\nexport default companyAPI;","map":{"version":3,"names":["axios","API_URL","companyAPI","searchCompanies","name","tax_id","government_registration_number","response","post","data","error","console","log","getObjCards","companyId","identifiers","companies_id"],"sources":["C:/Users/game_/Downloads/RTN/client/src/http/companyAPI.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"/api/company\";\r\n\r\nconst companyAPI = {\r\n  searchCompanies: async (name, tax_id, government_registration_number) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/searchCompanies`, {\r\n        name,\r\n        tax_id,\r\n        government_registration_number,\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log(\"Ошибка при поиске компаний:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getObjCards: async (companyId, identifiers) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/getObjCards`, {\r\n        companies_id: companyId,\r\n        identifiers,\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log(\"Ошибка при получении карточек объектов:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default companyAPI;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,cAAc;AAE9B,MAAMC,UAAU,GAAG;EACjBC,eAAe,EAAE,MAAAA,CAAOC,IAAI,EAAEC,MAAM,EAAEC,8BAA8B,KAAK;IACvE,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAE,GAAEP,OAAQ,kBAAiB,EAAE;QAC9DG,IAAI;QACJC,MAAM;QACNC;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDG,WAAW,EAAE,MAAAA,CAAOC,SAAS,EAAEC,WAAW,KAAK;IAC7C,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAE,GAAEP,OAAQ,cAAa,EAAE;QAC1De,YAAY,EAAEF,SAAS;QACvBC;MACF,CAAC,CAAC;MACF,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,KAAK,CAAC;MAC7D,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeR,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}